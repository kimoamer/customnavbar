{
  "version": 3,
  "sources": ["../../../../../apps/customnavbar/customnavbar/public/js/frappe/ui/notifications/customnavbar.js"],
  "sourcesContent": ["frappe.provide(\"frappe.search\");\nconsole.log(\"Loaded hakeem\")\nfrappe.ui.Notifications = class Notifications {\n    constructor() {\n        this.tabs = {};\n        this.notification_settings = frappe.boot.notification_settings;\n        this.make();\n    }\n\n    make() {\n        this.dropdown = $(\".navbar\").find(\".dropdown-notifications\").removeClass(\"hidden\");\n        this.dropdown_list = this.dropdown.find(\".notifications-list\");\n        this.header_items = this.dropdown_list.find(\".header-items\");\n        this.header_actions = this.dropdown_list.find(\".header-actions\");\n        this.body = this.dropdown_list.find(\".notification-list-body\");\n        this.panel_events = this.dropdown_list.find(\".panel-events\");\n        this.panel_notifications = this.dropdown_list.find(\".panel-notifications\");\n\n        this.user = frappe.session.user;\n\n        this.setup_headers();\n        this.setup_dropdown_events();\n    }\n\n    setup_headers() {\n        // Add header actions\n        $(`<span class=\"notification-settings pull-right\" data-action=\"go_to_settings\">\n\t\t\t${frappe.utils.icon(\"setting-gear\")}\n\t\t</span>`)\n            .on(\"click\", (e) => {\n                e.stopImmediatePropagation();\n                this.dropdown.dropdown(\"hide\");\n                frappe.set_route(\"Form\", \"Notification Settings\", frappe.session.user);\n            })\n            .appendTo(this.header_actions)\n            .attr(\"title\", __(\"Notification Settings\"))\n            .tooltip({ delay: { show: 600, hide: 100 }, trigger: \"hover\" });\n\n        $(`<span class=\"mark-all-read pull-right\" data-action=\"mark_all_as_read\">\n\t\t\t${frappe.utils.icon(\"mark-as-read\")}\n\t\t</span>`)\n            .on(\"click\", (e) => this.mark_all_as_read(e))\n            .appendTo(this.header_actions)\n            .attr(\"title\", __(\"Mark all as read\"))\n            .tooltip({ delay: { show: 600, hide: 100 }, trigger: \"hover\" });\n\n        this.categories = [\n            {\n                label: __(\"Notifications\"),\n                id: \"notifications\",\n                view: NotificationsView,\n                el: this.panel_notifications,\n            },\n            {\n                label: __(\"Today's Events\"),\n                id: \"todays_events\",\n                view: EventsView,\n                el: this.panel_events,\n            },\n        ];\n\n        let get_headers_html = (item) => {\n            let active = item.id == \"notifications\" ? \"active\" : \"\";\n\n            return `<li class=\"notifications-category ${active}\"\n   \t\t\t\t\tid=\"${item.id}\"\n   \t\t\t\t\tdata-toggle=\"collapse\"\n   \t\t\t\t>${item.label}</li>`;\n        };\n\n        let navitem = $(`<ul class=\"notification-item-tabs nav nav-tabs\" role=\"tablist\"></ul>`);\n        this.categories = this.categories.map((item) => {\n            item.$tab = $(get_headers_html(item));\n            item.$tab.on(\"click\", (e) => {\n                e.stopImmediatePropagation();\n                this.switch_tab(item);\n            });\n            navitem.append(item.$tab);\n\n            return item;\n        });\n        navitem.appendTo(this.header_items);\n        this.categories.forEach((category) => {\n            this.make_tab_view(category);\n        });\n        this.switch_tab(this.categories[0]);\n    }\n\n    switch_tab(item) {\n        // Set active tab\n        this.categories.forEach((item) => {\n            item.$tab.removeClass(\"active\");\n        });\n\n        item.$tab.addClass(\"active\");\n\n        // Hide other tabs\n        Object.keys(this.tabs).forEach((tab_name) => this.tabs[tab_name].hide());\n        this.tabs[item.id].show();\n    }\n\n    make_tab_view(item) {\n        let tabView = new item.view(item.el, this.dropdown, this.notification_settings);\n        this.tabs[item.id] = tabView;\n    }\n\n    mark_all_as_read(e) {\n        e.stopImmediatePropagation();\n        this.dropdown_list.find(\".unread\").removeClass(\"unread\");\n        frappe.call(\"frappe.desk.doctype.notification_log.notification_log.mark_all_as_read\");\n    }\n\n    setup_dropdown_events() {\n        this.dropdown.on(\"hide.bs.dropdown\", (e) => {\n            let hide = $(e.currentTarget).data(\"closable\");\n            $(e.currentTarget).data(\"closable\", true);\n            return hide;\n        });\n\n        this.dropdown.on(\"click\", (e) => {\n            $(e.currentTarget).data(\"closable\", true);\n        });\n    }\n};\n\nfrappe.ui.notifications = {\n    get_notification_config() {\n        return frappe.xcall(\"frappe.desk.notifications.get_notification_info\").then((r) => {\n            frappe.ui.notifications.config = r;\n            return r;\n        });\n    },\n\n    show_open_count_list(doctype) {\n        if (!frappe.ui.notifications.config) {\n            this.get_notification_config().then(() => {\n                this.route_to_list_with_filters(doctype);\n            });\n        } else {\n            this.route_to_list_with_filters(doctype);\n        }\n    },\n\n    route_to_list_with_filters(doctype) {\n        let filters = frappe.ui.notifications.config[\"conditions\"][doctype];\n        if (filters && $.isPlainObject(filters)) {\n            if (!frappe.route_options) {\n                frappe.route_options = {};\n            }\n            $.extend(frappe.route_options, filters);\n        }\n        frappe.set_route(\"List\", doctype);\n    },\n};\n\nclass BaseNotificationsView {\n    constructor(wrapper, parent, settings) {\n        // wrapper, max_length\n        this.wrapper = wrapper;\n        this.parent = parent;\n        this.settings = settings;\n        this.max_length = 20;\n        this.container = $(`<div></div>`).appendTo(this.wrapper);\n        this.make();\n    }\n\n    show() {\n        this.container.show();\n    }\n\n    hide() {\n        this.container.hide();\n    }\n}\n\nclass NotificationsView extends BaseNotificationsView {\n    make() {\n        this.notifications_icon = this.parent.find(\".notifications-icon\");\n        this.notifications_icon\n            .attr(\"title\", __(\"Notifications\"))\n            .tooltip({ delay: { show: 600, hide: 100 }, trigger: \"hover\" });\n        this.inject_notification_count();\n        this.setup_notification_listeners();\n        this.get_notifications_list(this.max_length).then((r) => {\n            if (!r.message) return;\n            this.dropdown_items = r.message.notification_logs;\n            frappe.update_user_info(r.message.user_info);\n            this.render_notifications_dropdown();\n            if (this.settings.seen == 0 && this.dropdown_items.length > 0) {\n                var unread = 0;\n                for (var log of this.dropdown_items) {\n                    if (log.read == 0) {\n                        unread += 1;\n                    }\n                }\n                let text = document.getElementById(\"notifications-count\");\n                text.textContent = unread;\n                this.toggle_notification_icon(false);\n            }\n        });\n    }\n    inject_notification_count() {\n        const navbar_icon_html = `\n        <span id='notifications-count' class=\"icon-button__badge\" style=\"position: absolute;top: -5px;right: -5px;width: 15px;height: 15px;line-height: 1;background: red;color: #ffffff;display: flex;justify-content: center;align-items: center;border-radius: 50%;font-size: 14px;font-family: Arial;font-weight: bold;text-align: center;box-shadow: 0 0 0 1px #32333b;transform: scale(1);opacity: 1;transition: 0.3s cubic-bezier(0, 0.24, 0.86, 1.08) all;z-index: 3;\"></span>\n        `;\n        $('.notifications-unseen').append(\n            navbar_icon_html\n        );\n    }\n    update_dropdown() {\n        this.get_notifications_list(1).then((r) => {\n            if (!r.message) return;\n            let new_item = r.message.notification_logs[0];\n            frappe.update_user_info(r.message.user_info);\n            this.dropdown_items.unshift(new_item);\n            if (this.dropdown_items.length > this.max_length) {\n                this.container.find(\".recent-notification\").last().remove();\n                this.dropdown_items.pop();\n            }\n            var unread = 0;\n            for (var log of this.dropdown_items) {\n                if (log.read == 0) {\n                    unread += 1;\n                }\n            }\n            let text = document.getElementById(\"notifications-count\");\n            text.textContent = unread;\n            this.insert_into_dropdown();\n        });\n    }\n\n    change_activity_status() {\n        if (this.container.find(\".activity-status\")) {\n            this.container.find(\".activity-status\").replaceWith(\n                `<a class=\"recent-item text-center text-muted\"\n\t\t\t\t\thref=\"/app/List/Notification Log\">\n\t\t\t\t\t<div class=\"full-log-btn\">${__(\"View Full Log\")}</div>\n\t\t\t\t</a>`\n            );\n        }\n    }\n\n    mark_as_read(docname, $el) {\n        frappe\n            .call(\"frappe.desk.doctype.notification_log.notification_log.mark_as_read\", {\n                docname: docname,\n            })\n            .then(() => {\n                $el.removeClass(\"unread\");\n            });\n    }\n\n    insert_into_dropdown() {\n        let new_item = this.dropdown_items[0];\n        let new_item_html = this.get_dropdown_item_html(new_item);\n        $(new_item_html).prependTo(this.container);\n        this.change_activity_status();\n    }\n\n    get_dropdown_item_html(notification_log) {\n        let doc_link = this.get_item_link(notification_log);\n\n        let read_class = notification_log.read ? \"\" : \"unread\";\n        let message = notification_log.subject;\n\n        let title = message.match(/<b class=\"subject-title\">(.*?)<\\/b>/);\n        message = title\n            ? message.replace(title[1], frappe.ellipsis(strip_html(title[1]), 100))\n            : message;\n\n        let timestamp = frappe.datetime.comment_when(notification_log.creation);\n        let message_html = `<div class=\"message\">\n\t\t\t<div>${message}</div>\n\t\t\t<div class=\"notification-timestamp text-muted\">\n\t\t\t\t${timestamp}\n\t\t\t</div>\n\t\t</div>`;\n\n        let user = notification_log.from_user;\n        let user_avatar = frappe.avatar(user, \"avatar-medium user-avatar\");\n\n        let item_html = $(`<a class=\"recent-item notification-item ${read_class}\"\n\t\t\t\thref=\"${doc_link}\"\n\t\t\t\tdata-name=\"${notification_log.name}\"\n\t\t\t>\n\t\t\t\t<div class=\"notification-body\">\n\t\t\t\t\t${user_avatar}\n\t\t\t\t\t${message_html}\n\t\t\t\t</div>\n\t\t\t\t<div class=\"mark-as-read\" title=\"${__(\"Mark as Read\")}\">\n\t\t\t\t</div>\n\t\t\t</a>`);\n\n        if (!notification_log.read) {\n            let mark_btn = item_html.find(\".mark-as-read\");\n            mark_btn.tooltip({ delay: { show: 600, hide: 100 }, trigger: \"hover\" });\n            mark_btn.on(\"click\", (e) => {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                this.mark_as_read(notification_log.name, item_html);\n            });\n        }\n\n        item_html.on(\"click\", () => {\n            !notification_log.read && this.mark_as_read(notification_log.name, item_html);\n            this.notifications_icon.trigger(\"click\");\n        });\n\n        return item_html;\n    }\n\n    render_notifications_dropdown() {\n        if (this.settings && !this.settings.enabled) {\n            this.container.html(`<li class=\"recent-item notification-item\">\n\t\t\t\t<span class=\"text-muted\">\n\t\t\t\t\t${__(\"Notifications Disabled\")}\n\t\t\t\t</span></li>`);\n        } else {\n            if (this.dropdown_items.length) {\n                this.container.empty();\n                this.dropdown_items.forEach((notification_log) => {\n                    this.container.append(this.get_dropdown_item_html(notification_log));\n                });\n                this.container.append(`<a class=\"list-footer\"\n\t\t\t\t\thref=\"/app/List/Notification Log\">\n\t\t\t\t\t\t<div class=\"full-log-btn\">${__(\"See all Activity\")}</div>\n\t\t\t\t\t</a>`);\n            } else {\n                this.container.append(\n                    $(`<div class=\"notification-null-state\">\n\t\t\t\t\t<div class=\"text-center\">\n\t\t\t\t\t\t<img src=\"/assets/frappe/images/ui-states/notification-empty-state.svg\" alt=\"Generic Empty State\" class=\"null-state\">\n\t\t\t\t\t\t<div class=\"title\">${__(\"No New notifications\")}</div>\n\t\t\t\t\t\t<div class=\"subtitle\">\n\t\t\t\t\t\t\t${__(\"Looks like you haven\u2019t received any notifications.\")}\n\t\t\t\t\t</div></div></div>`)\n                );\n            }\n        }\n    }\n\n    get_notifications_list(limit) {\n        return frappe.call(\n            \"frappe.desk.doctype.notification_log.notification_log.get_notification_logs\",\n            { limit: limit }\n        );\n    }\n\n    get_item_link(notification_doc) {\n        if (notification_doc.link) {\n            return notification_doc.link;\n        }\n        const link_doctype = notification_doc.document_type\n            ? notification_doc.document_type\n            : \"Notification Log\";\n        const link_docname = notification_doc.document_name\n            ? notification_doc.document_name\n            : notification_doc.name;\n        return frappe.utils.get_form_link(link_doctype, link_docname);\n    }\n\n    toggle_notification_icon(seen) {\n        this.notifications_icon.find(\".notifications-seen\").toggle(seen);\n        this.notifications_icon.find(\".notifications-unseen\").toggle(!seen);\n    }\n\n    toggle_seen(flag) {\n        frappe.call(\n            \"frappe.desk.doctype.notification_settings.notification_settings.set_seen_value\",\n            {\n                value: cint(flag),\n                user: frappe.session.user,\n            }\n        );\n    }\n\n    setup_notification_listeners() {\n        frappe.realtime.on(\"notification\", () => {\n            this.toggle_notification_icon(false);\n            this.update_dropdown();\n        });\n\n        frappe.realtime.on(\"indicator_hide\", () => {\n            this.toggle_notification_icon(true);\n        });\n\n        this.parent.on(\"show.bs.dropdown\", () => {\n            this.toggle_seen(true);\n            if (this.notifications_icon.find(\".notifications-unseen\").is(\":visible\")) {\n                this.toggle_notification_icon(true);\n                frappe.call(\n                    \"frappe.desk.doctype.notification_log.notification_log.trigger_indicator_hide\"\n                );\n            }\n        });\n    }\n}\n\nclass EventsView extends BaseNotificationsView {\n    make() {\n        let today = frappe.datetime.get_today();\n        frappe\n            .xcall(\"frappe.desk.doctype.event.event.get_events\", {\n                start: today,\n                end: today,\n            })\n            .then((event_list) => {\n                this.render_events_html(event_list);\n            });\n    }\n\n    render_events_html(event_list) {\n        let html = \"\";\n        if (event_list.length) {\n            let get_event_html = (event) => {\n                let time = __(\"All Day\");\n                if (!event.all_day) {\n                    let start_time = frappe.datetime.get_time(event.starts_on);\n                    let days_diff = frappe.datetime.get_day_diff(event.ends_on, event.starts_on);\n                    let end_time = frappe.datetime.get_time(event.ends_on);\n                    if (days_diff > 1) {\n                        end_time = __(\"Rest of the day\");\n                    }\n                    time = `${start_time} - ${end_time}`;\n                }\n\n                // REDESIGN-TODO: Add Participants to get_events query\n                let particpants = \"\";\n                if (event.particpants) {\n                    particpants = frappe.avatar_group(event.particpants, 3);\n                }\n\n                // REDESIGN-TODO: Add location to calendar field\n                let location = \"\";\n                if (event.location) {\n                    location = `, ${event.location}`;\n                }\n\n                return `<a class=\"recent-item event\" href=\"/app/event/${event.name}\">\n\t\t\t\t\t<div class=\"event-border\" style=\"border-color: ${event.color}\"></div>\n\t\t\t\t\t<div class=\"event-item\">\n\t\t\t\t\t\t<div class=\"event-subject\">${event.subject}</div>\n\t\t\t\t\t\t<div class=\"event-time\">${time}${location}</div>\n\t\t\t\t\t\t${particpants}\n\t\t\t\t\t</div>\n\t\t\t\t</a>`;\n            };\n            html = event_list.map(get_event_html).join(\"\");\n        } else {\n            html = `\n\t\t\t\t<div class=\"notification-null-state\">\n\t\t\t\t\t<div class=\"text-center\">\n\t\t\t\t\t<img src=\"/assets/frappe/images/ui-states/event-empty-state.svg\" alt=\"Generic Empty State\" class=\"null-state\">\n\t\t\t\t\t<div class=\"title\">${__(\"No Upcoming Events\")}</div>\n\t\t\t\t\t<div class=\"subtitle\">\n\t\t\t\t\t\t${__(\"There are no upcoming events for you.\")}\n\t\t\t\t</div></div></div>\n\t\t\t`;\n        }\n\n        this.container.html(html);\n    }\n}"],
  "mappings": "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",
  "names": []
}
